<?php
namespace Backend\Controllers\V1;

use Backend\Components\Auth\Session;
use Backend\Components\ErrorCode;
use Backend\Components\Exception\ApiException;
use Backend\Controllers\BaseController;
use Backend\Models\Sys\Manage;
use Backend\Services\UserService;

/**
 * Class SignController
 * @package Backend\Controllers\V1
 * @RoutePrefix('/api/v1/sign')
 */
class SignController extends BaseController
{
    /**
     * @var UserService $userService
     */
    protected $userService;

    /**
     * @throws \ReflectionException
     */
    public function initialize()
    {
        $this->userService = new UserService();
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * @Post(
     *     '/in'
     * )
     * @throws \Exception
     */
    public function inAction()
    {
        //获取请求参数
        $account  = $this->request->getPost('account');
        $password = $this->request->getPost('password');
        if (!$account || !$password) {
            throw new ApiException(ErrorCode::POST_DATA_NOT_PROVIDED, '用户名或密码不能为空');
        }
        //校验账户类型
        $accountType = $this->userService->accountTypeCheck($account);
        if (!$accountType) {
            throw new ApiException(ErrorCode::POST_DATA_INVALID, '账户类型错误');
        }
        $identity  = $this->userService->login($accountType, [
            'username' => $account,
            'password' => $password
        ]);
        $startTime = time();
        $session   = new Session($identity, $startTime, $startTime + 86400);
        $token     = $this->jwt->getToken($session);
        $session->setToken($token);
        return [
            'token'   => $token,
            'expires' => $session->getExpirationTime(),
            'user'    => $session->getIdentity()
        ];
    }
}